#!/usr/bin/env python3

# Removes file from index OR from curr directory AND index 

import sys
import os 
import filecmp

args = sys.argv[1:]
index_path = '.mygit/index'
commits_dir = '.mygit/commits'
options = set()
filenames = []

# If cached and force remove options exist in argument
for arg in args:
    if arg == '--cached' or arg == '--force':
        options.add(arg)
    # Else if no options, only attach filenames for our arguments
    else:
        filenames.append(arg)


if not os.path.isdir(index_path):
    sys.exit(1)

def get_latest_commit_file(filename):
    try:
        if not os.path.exists(commits_dir):
            return None
        
        # Get all numbered commit directories and find the highest
        commit_nums = [int(d) for d in os.listdir(commits_dir) if d.isdigit()]
        if not commit_nums:
            return None
            
        latest_commit = max(commit_nums)
        commit_file_path = f'{commits_dir}/{latest_commit}/{filename}'
        return commit_file_path if os.path.exists(commit_file_path) else None
    except:
        return None

def files_are_same(file1, file2):
    if not os.path.exists(file1) or not os.path.exists(file2):
        return False
    return filecmp.cmp(file1, file2, shallow=False)
